# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Status options
# -------------------------------------------------------------------

set -g status off
set -g status-interval 1
#set -g status-utf8 on

set -g set-titles on
set -g set-titles-string "#T"

set -g status-bg green
set -g pane-border-fg white
set -g pane-active-border-fg white
set -g status-left ''
set -g status-right "#[bg=black]#[fg=yellow] #(whoami)@#(hostname) #[fg=red][#(~/.local/bin/battery.sh)]#[bg=black]#[fg=magenta] [%R] "
set -g visual-activity on
setw -g window-status-format ' #[bg=red]#[fg=black] #I #[bg=black]#[fg=green] #W '
setw -g window-status-current-format ' #[bg=green]#[fg=black] #I #[bg=black]#[fg=green] #W '
setw -g window-status-current-bg red

set -g aggressive-resize on

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-]
unbind C-b
set -g prefix C-s

# Allows faster key repetition
set -s escape-time 0

# Index starts from 1
set -g base-index 1

# Renumber windows when a window is closed
set -g renumber-windows on

# History
set -g history-limit 102400

# Repeat time limit (ms)
set -g repeat-time 0

# 256-color terminal
set -g default-terminal "screen-256color"

# BUG: Exits immediately
# set -g default-shell /usr/bin/bash

# Vi key binding in the status line
set -g status-keys vi

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# UTF-8
#set-window-option -g utf8 on

# Copy-mode
# set-window-option -g mode-mouse on
set-window-option -g mode-keys vi

set -g mouse off

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
#bind-key c new-window -c "#{pane_current_path}"

# prefix ctrl-a
#bind-key c-a last-window

# prefix a
#bind-key a send-prefix

#
unbind 'c'
bind-key c new-window -c "#{pane_current_path}"

## Rename session
#bind-key r command-prompt "rename-session %%"

## Rename window
#unbind '$'
#bind-key '$' command-prompt "rename-window %%"

# Create a minimal split horizontally
unbind '.'
bind-key . split-window -h -c "#{pane_current_path}" -l 60

# Create a minimal split vertically
unbind ','
bind-key , command-prompt "split-window -v -c \"#{pane_current_path}\" -l 12 %%"

unbind '"'
bind-key \ split-window -h -c "#{pane_current_path}"

unbind '%'
bind-key - split-window -v -c "#{pane_current_path}"

# Moving windows
bind-key '>' swap-window -t :+
bind-key '<' swap-window -t :-

# Back and forth
#bind-key bspace previous-window
#bind-key space next-window
#bind-key / next-layout # Overridden

# New Session
bind-key g command-prompt "new-session -s %%"

# Pane-movement
bind-key h select-pane -L
bind-key l select-pane -R
bind-key j select-pane -D
bind-key k select-pane -U

bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

# Smart pane switching with awareness of vim splits
#bind -n h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
#bind -n \ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key S source-file ~/.tmux.conf

# copy-mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-pipe "cat | xsel --keep --clipboard"

# Capture pane and open in Vim
#bind-key C-c run 'tmux capture-pane -S -102400 -p > /tmp/tmux-capture.txt'\;\
             #new-window "view /tmp/tmux-capture.txt"

# Tasks
unbind '#'
bind-key '#' split-window 'task ls; /bin/bash'

# Notes
#bind-key C-n if-shell "tmux select-window -t NOTES" "" \
#"new-window -n NOTES 'bash -i ~/gdrive/sync/notes/list'"

#bind-key c new-window -c "${pane_current_path}"

bind-key / command-prompt "split-window 'exec man %%'"
bind-key \; command-prompt "new-window 'exec man %%'"

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------
set-option -g status-justify left
#set-option -g status-left '#h '
#set-option -g status-left-length 16
#set-option -g status-bg colour237
set-option -g status-right '#(date "+%a %b %d %H:%M")'
set-option -g status-interval 60

#set-option -g pane-active-border-fg colour240
#set-option -g pane-border-fg colour238

set-window-option -g window-status-format '#I#W#F '
set-window-option -g window-status-current-format '#I #W#F '

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
#bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
#bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# select-pane (@george-b)
#bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"
